% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/squeeze.R
\name{rray_squeeze}
\alias{rray_squeeze}
\title{Squeeze an rray}
\usage{
rray_squeeze(x, axes = NULL)
}
\arguments{
\item{x}{An rray.}

\item{axes}{An integer vector specifying the size 1 dimensions to drop. If
\code{NULL}, all size 1 dimensions are dropped.}
}
\description{
\code{rray_squeeze()} is conceptually similar to \code{\link[base:drop]{base::drop()}}, but it allows
for the specification of specific dimensions to squeeze.
}
\details{
The dimension name handling of \code{rray_squeeze()} is slightly different from
what happens with \code{drop()}. When a \code{(1, 10)} matrix is squeezed to a 1-D
array with dimension \code{(10)}, if there were \emph{column names} on the matrix,
they do not appear in the resulting 1-D array. While this might seem
intuitive at first, it is not consistent with the treatment of 1-D arrays
as 1 column matrices. On the other hand, a \code{(10, 1)} matrix with row names
will keep it's dimension names when squeezed as this is consistent with the
above-mentioned treatment of 1-D arrays. \code{\link[base:drop]{base::drop()}} will attempt to keep
names in both situations.
}
\examples{

# (10, 1) -> (10)
x <- rray(1:10, c(10, 1))
rray_squeeze(x)

# Multiple squeezed dimensions
# (10, 1, 1) -> (10)
y <- rray_reshape(x, c(10, 1, 1))
rray_squeeze(y)

# Use `axes` to specify dimensions to drop
# (10, 1, 1) -> drop 2 -> (10, 1)
rray_squeeze(y, axes = 2)

# Dimension names are kept here
x <- set_row_names(x, letters[1:10])
rray_squeeze(x)

# But not here
rray_squeeze(t(x))

}
