% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unique.R
\name{rray_unique}
\alias{rray_unique}
\alias{rray_unique_loc}
\alias{rray_unique_count}
\title{Find and count unique values in an array}
\usage{
rray_unique(x, axis = 1L)

rray_unique_loc(x, axis = 1L)

rray_unique_count(x, axis = 1L)
}
\arguments{
\item{x}{A vector, matrix, array, or rray.}

\item{axis}{A single integer. The axis to look for unique values over.}
}
\value{
\itemize{
\item \code{rray_unique()}: an array the same type as \code{x} containing only
unique values.
\item \code{rray_unique_loc()}: an integer vector, giving locations of
the unique values.
\item \code{rray_unique_count()}: an integer vector of length 1, giving the number
of unique values.
}
}
\description{
\itemize{
\item \code{rray_unique()}: the unique values. Equivalent to \code{\link[=unique]{unique()}} with the
\code{MARGIN} argument.
\item \code{rray_unique_loc()}: the locations of the unique values.
\item \code{rray_unique_count()}: the number of unique values.
}
}
\details{
When duplicates are detected, the \emph{first} one is used in the result.
}
\examples{
x <- rray(c(1, 1, 2, 2), c(2, 2))
x <- set_row_names(x, c("r1", "r2"))
x <- set_col_names(x, c("c1", "c2"))

# Unique rows. The first unique
# row is used
rray_unique(x, 1L)

# Create a 3d version of x
# where the columns are not unique
y <- rray_expand_dims(x, 1)

# All of the rows are unique...
rray_unique(y, 1L)

# ...but the columns are not
rray_unique(y, 2L)

# The 3rd dimension is unique
rray_unique(y, 3L)

# rray_unique_loc() returns an
# integer vector you can use
# to subset out the unique values along
# the axis you are interested in
y[, rray_unique_loc(y, 2L)]

# Only 1 unique column
rray_unique_count(y, 2L)

# 2 unique 3D slices
rray_unique_count(y, 3L)

}
\seealso{
\code{\link[=rray_duplicate_any]{rray_duplicate_any()}} for functions that work with the dual of
unique values: duplicated values.

\code{\link[vctrs:vec_unique]{vctrs::vec_unique()}} for functions that detect unique values among
any type of vector object.
}
