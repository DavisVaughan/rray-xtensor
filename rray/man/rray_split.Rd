% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split.R
\name{rray_split}
\alias{rray_split}
\title{Split an array along an axis}
\usage{
rray_split(x, axes, n = NULL)
}
\arguments{
\item{x}{A vector, matrix, array, or rray.}

\item{axes}{An integer vector. The axes to split on.}

\item{n}{An integer vector, or \code{NULL}. By default, this is computed as the
dimension size of each axis specified in \code{axes}. If not \code{NULL}, it should
be the same length as \code{axes}.}
}
\value{
A list of equal pieces of type \code{x}.
}
\description{
\code{rray_split()} splits \code{x} into \code{n} equal pieces, splitting along an \code{axis}.
}
\examples{

x <- matrix(1:8, ncol = 2)

# Split the rows
rray_split(x, 1)

# Split the columns
rray_split(x, 2)

# Split along multiple dimensions
# To have them in the most interpretable
# order, split backwards along the dimensions
# (i.e. 2 then 1)
rray_split(x, c(2, 1))

# Split along rows in chunks of 2
rray_split(x, 1, 2)

# Split along columns and then
# rows in chunks of 2
rray_split(x, c(2, 1), c(2, 2))


# 4 dimensional example
x_4d <- rray(
  x = 1:16,
  dim = c(2, 2, 2, 2),
  dim_names = list(
    c("r1", "r2"),
    c("c1", "c2"),
    c("d1", "d2"),
    c("e1", "e2")
  )
)

# Split along the 1st dimension (rows)
# End up with 2 equal sized elements
rray_split(x_4d, 1)

# Split along columns
rray_split(x_4d, 2)

# Probably the most useful thing you might do
# is use this to split the 4D array into a set
# of 4 2D matrices. To have them in order
# split by the 4th dimension, then the 3rd.
rray_split(x_4d, c(4, 3))

}
